<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="status">

<!-- 총괄 현황 -->
<select id="selectTotalStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
            SELECT 
                    #{showdate} as showdate
                    ,#{seldate} as seldate
                    
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND DISCHARGE_DATE = #{seldate}  AND (DEATH IS NULL OR DEATH !='Y')) AS today_gangnam_cured_p
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND DISCHARGE_DATE IS NULL AND CONFIRM_DATE = #{seldate}  AND (DEATH IS NULL OR DEATH !='Y')) AS today_gangnam_curing_p
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{seldate} AND DEATH = 'Y') AS today_gangnam_death_p
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN != '강남구' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{seldate}) AS today_tasigu_p
                    
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND ICHUP_YN ='N' AND DISCHARGE_DATE IS NOT NULL  AND (DEATH IS NULL OR DEATH !='Y')) AS gangnam_cured_p
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND ICHUP_YN ='N' AND DISCHARGE_DATE IS NULL  AND (DEATH IS NULL OR DEATH !='Y')) AS gangnam_curing_p
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND ICHUP_YN ='N' AND DEATH = 'Y') AS gangnam_death_p
                    
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND ICHUP_YN ='Y' AND DISCHARGE_DATE IS NOT NULL  AND (DEATH IS NULL OR DEATH !='Y')) AS gangnam_ichup_cured_p
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND ICHUP_YN ='Y' AND DISCHARGE_DATE IS NULL  AND (DEATH IS NULL OR DEATH !='Y')) AS gangnam_ichup_curing_p
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN = '강남구' AND TA_CONFIRM_YN ='N' AND ICHUP_YN ='Y' AND DEATH = 'Y') AS gangnam_ichup_death_p
                    
                    ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND ORG_GUBUN != '강남구' AND TA_CONFIRM_YN ='N') AS tasigu_p
                    
                    ,'' AS etc_p
              FROM DUAL
		]]>
</select>

<select id="selectTotalSum" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
            SELECT 
                     (SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{WRITE_DATE}) AS today_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ORG_GUBUN = '강남구' AND CONFIRM_DATE = #{WRITE_DATE}) AS today_gangnam_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ORG_GUBUN = '강남구' AND CONFIRM_DATE = #{WRITE_DATE} and DEATH != 'Y' and DISCHARGE_DATE IS NOT NULL) AS today_gangnam_cured_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ORG_GUBUN = '강남구' AND CONFIRM_DATE = #{WRITE_DATE} and DEATH != 'Y' and DISCHARGE_DATE IS NULL) AS today_gangnam_curing_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ORG_GUBUN = '강남구' AND CONFIRM_DATE = #{WRITE_DATE} and DEATH = 'Y') AS today_gangnam_death_cnt
                     
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ORG_GUBUN != '강남구' AND CONFIRM_DATE = #{WRITE_DATE}) AS today_tasigu_cnt
                     
                     
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' ) AS accum_cnt

                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'N' AND ORG_GUBUN = '강남구') AS accum_gangnam_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'N' AND ORG_GUBUN = '강남구' and DEATH != 'Y' and DISCHARGE_DATE IS NOT NULL) AS accum_gangnam_cured_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'N' AND ORG_GUBUN = '강남구' and DEATH != 'Y' and DISCHARGE_DATE IS NULL) AS accum_gangnam_curing_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'N' AND ORG_GUBUN = '강남구' and DEATH = 'Y') AS accum_gangnam_death_cnt
                     
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'Y' AND ORG_GUBUN = '강남구') AS accum_gangnam_ichup_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'Y' AND ORG_GUBUN = '강남구' and DEATH != 'Y' and DISCHARGE_DATE IS NOT NULL) AS accum_gangnam_ichup_cured_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'Y' AND ORG_GUBUN = '강남구' and DEATH != 'Y' and DISCHARGE_DATE IS NULL) AS accum_gangnam_ichup_curing_cnt
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ICHUP_YN = 'Y' AND ORG_GUBUN = '강남구' and DEATH = 'Y') AS accum_gangnam_ichup_death_cnt
                     
                     ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND ORG_GUBUN != '강남구') AS accum_tasigu_cnt
              FROM DUAL
		]]>
</select>

 
<select id="selectTotalDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CELL_NUM
					,PATIENT_NUM
					,PATIENT_NAME
					,CONTACT_NUM
					,CONTACT_NAME
					,CONFIRM_GRADE
					,SEX
					,BIRTH
					,JOB
					,ORG_GUBUN
					,ORG_DONG
					,ORG_ADDRESS
					,ORG_ADDRESS_DTL
					,INFECT_GUBUN
					,INFECT_DONG
					,INFECT_DAE
					,INFECT_SO
					,INFECT_ASFECT_AREA
					,INFECT_ASFECT_AREA_DTL
					,CONFIRM_DATE
					,HOSPITAL
					,DISCHARGE_DATE
					,REMARK
					,ICHUP_YN
					,INS_ID
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
            FROM CORONA_CONFIRM_STATUS 
            WHERE DEL_YN = 0              
		]]>
		
			<if test='TOTAL_GUBUN == "강남구"'>
				AND ORG_GUBUN = '강남구'
			</if>
			
			<if test='TOTAL_GUBUN == "타지역"'>
				AND ORG_GUBUN != '강남구'
			</if>
			
			<if test='TOTAL_CONDITION =="Y"'>
				AND DISCHARGE_DATE IS NOT NULL
			</if>
			
			<if test='TOTAL_CONDITION =="N"'>
				AND DISCHARGE_DATE IS NULL
			</if>
			
			<if test='TOTAL_CONDITION =="DEATH"'>
				AND DEATH = 'Y'
			</if>
			
			<if test='TOTAL_ICHUP !=""'>
				AND ICHUP_YN = #{TOTAL_ICHUP}
			</if>
			
			<if test="TOTAL_DONG_GUBUN !=''">
				AND ORG_DONG =   #{TOTAL_DONG_GUBUN}
			</if>
			
			<if test="WRITE_DATE !=''">
				AND CONFIRM_DATE =   #{WRITE_DATE}
			</if>

		ORDER BY INS_DATE DESC		
</select>


<select id="selectConfirmStatisticlist" parameterType="hashmap" resultType="hashmap">
<![CDATA[
        SELECT
            ST_DAY
            ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN='0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE=ST_DATE.ST_DAY AND ORG_GUBUN = '강남구') as GANGNAM_CNT
        FROM
        (
            SELECT TO_CHAR(TO_DATE('20200101', 'YYYYMMDD')+LEVEL-1, 'YYYYMMDD') ST_DAY
              FROM DUAL
            CONNECT BY LEVEL <= (TO_DATE(to_char(sysdate,'YYYYMMDD'), 'YYYYMMDD')-TO_DATE('20200101', 'YYYYMMDD')+1)
        )ST_DATE
]]>
</select>

<select id="selectConfirmAccumStatisticlist" parameterType="hashmap" resultType="hashmap">
<![CDATA[
        SELECT
            ST_DAY
            ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN='0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE<=ST_DATE.ST_DAY AND ORG_GUBUN = '강남구') as confirm_accum_gangnam
        FROM
        (
            SELECT TO_CHAR(TO_DATE('20200101', 'YYYYMMDD')+LEVEL-1, 'YYYYMMDD') ST_DAY
              FROM DUAL
            CONNECT BY LEVEL <= (TO_DATE(to_char(sysdate,'YYYYMMDD'), 'YYYYMMDD')-TO_DATE('20200101', 'YYYYMMDD')+1)
        )ST_DATE
        ]]>
</select>


<select id="selectTotalMiddle" parameterType="hashmap" resultType="hashmap">
            SELECT 
                ORG_DONG
                ,(SELECT COUNT(1) FROM  CORONA_CONFIRM_STATUS A WHERE A.ORG_GUBUN = '강남구'  AND A.TA_CONFIRM_YN ='N' AND A.DEL_YN = '0' AND A.ORG_DONG = CCS.ORG_DONG  AND A.DISCHARGE_DATE IS NOT NULL
           			<if test='ACCUM != "Y"'>
						AND CONFIRM_DATE = #{WRITE_DATE} 
					</if>
					<if test="ICHUP != '' and ICHUP != 'undefined'">
						AND ICHUP_YN = #{ICHUP} 
					</if>
                
                ) CURE_Y_CNT
                ,(SELECT COUNT(1) FROM  CORONA_CONFIRM_STATUS B WHERE B.ORG_GUBUN = '강남구'  AND B.TA_CONFIRM_YN ='N' AND B.DEL_YN = '0' AND B.ORG_DONG = CCS.ORG_DONG  AND B.DISCHARGE_DATE IS NULL
           			<if test='ACCUM != "Y"'>
						AND CONFIRM_DATE = #{WRITE_DATE} 
					</if>
					<if test="ICHUP != '' and ICHUP != 'undefined'">
						AND ICHUP_YN = #{ICHUP} 
					</if>
		                
                ) CURE_N_CNT
				,(SELECT COUNT(1) FROM  CORONA_CONFIRM_STATUS B WHERE B.ORG_GUBUN = '강남구'  AND B.TA_CONFIRM_YN ='N' AND B.DEL_YN = '0' AND B.ORG_DONG = CCS.ORG_DONG
					AND DEATH = 'Y'
           			<if test='ACCUM != "Y"'>
						AND CONFIRM_DATE = #{WRITE_DATE} 
					</if>
					<if test="ICHUP != '' and ICHUP != 'undefined'">
						AND ICHUP_YN = #{ICHUP} 
					</if>
		                
                ) DEATH_CNT
                ,COUNT(1) AS ORG_DONG_TOT
            FROM CORONA_CONFIRM_STATUS CCS
            WHERE del_yn = 0
            AND TA_CONFIRM_YN ='N' 
            AND ORG_GUBUN = '강남구'
			<if test='ACCUM != "Y"'>
				AND CONFIRM_DATE = #{WRITE_DATE} 
			</if>
			<if test="ICHUP != '' and ICHUP != 'undefined'">
				AND ICHUP_YN = #{ICHUP} 
			</if>

            GROUP BY ORG_DONG 
</select>

	<select id="selectTotalStatisticsList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
        SELECT 
                 ST_DAY
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='N' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY) AS accum_gangnam_p
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='N' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY AND DISCHARGE_DATE <= ST_DATE.ST_DAY) AS accum_gangnam_cured_p
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='N' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY AND (DISCHARGE_DATE > ST_DATE.ST_DAY or DISCHARGE_DATE is null) ) AS accum_gangnam_curing_p
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='N' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY AND DEATH = 'Y') AS accum_gangnam_death_p

                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='Y' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY) AS accum_gangnam_ichup_p
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='Y' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY AND DISCHARGE_DATE <= ST_DATE.ST_DAY) AS accum_gangnam_ichup_cured_p
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='Y' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY AND (DISCHARGE_DATE > ST_DATE.ST_DAY or DISCHARGE_DATE is null)) AS accum_gangnam_ichup_curing_p
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN = '강남구' AND ICHUP_YN ='Y' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY AND DEATH = 'Y') AS accum_gangnam_ichup_death_p
                 
                 ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE ORG_GUBUN != '강남구' AND TA_CONFIRM_YN ='N' AND del_yn = '0' AND CONFIRM_DATE <=ST_DATE.ST_DAY) AS accum_tasigu_p
       FROM 
        (
            SELECT TO_CHAR(TO_DATE('20200101', 'YYYYMMDD')+LEVEL-1, 'YYYYMMDD') ST_DAY
              FROM DUAL
            CONNECT BY LEVEL <= (TO_DATE(to_char(sysdate,'YYYYMMDD'), 'YYYYMMDD')-TO_DATE('20200101', 'YYYYMMDD')+1)
        )ST_DATE	
		]]>
	</select>
	
	
	<select id="selectConsultStatisticsList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
        SELECT 
            ST_DAY
           ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE=ST_DATE.ST_DAY AND CONSULT_TIME BETWEEN '09:00' AND '22:00') AS CUR_JU 
           ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE=ST_DATE.ST_DAY AND CONSULT_TIME NOT BETWEEN '09:00' AND '22:00') AS CUR_YA
           ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE=ST_DATE.ST_DAY) AS CUR_TOTAL
        FROM
        (
            SELECT TO_CHAR(TO_DATE('20200101', 'YYYYMMDD')+LEVEL-1, 'YYYYMMDD') ST_DAY
              FROM DUAL
            CONNECT BY LEVEL <= (TO_DATE(to_char(sysdate,'YYYYMMDD'), 'YYYYMMDD')-TO_DATE('20200101', 'YYYYMMDD')+1)
        )ST_DATE
		]]>
	</select>
	
	<select id="selectConsultGubunStatisticsList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
        SELECT  
            ST_DAY
            ,MAX(GUBUN_1) + MAX(GUBUN_2) + MAX(GUBUN_3) + MAX(GUBUN_4) + MAX(GUBUN_5) + MAX(GUBUN_6) + MAX(GUBUN_7) + MAX(GUBUN_8) + MAX(GUBUN_9) + MAX(GUBUN_10) AS GUBUN_TOTAL
            ,MAX(GUBUN_1) AS GUBUN_1
            ,MAX(GUBUN_2) AS GUBUN_2
            ,MAX(GUBUN_3) AS GUBUN_3
            ,MAX(GUBUN_4) AS GUBUN_4
            ,MAX(GUBUN_5) AS GUBUN_5
            ,MAX(GUBUN_6) AS GUBUN_6
            ,MAX(GUBUN_7) AS GUBUN_7
            ,MAX(GUBUN_8) AS GUBUN_8
            ,MAX(GUBUN_9) AS GUBUN_9
            ,MAX(GUBUN_10) AS GUBUN_10
        FROM (
               SELECT
                   ST_DATE.ST_DAY AS ST_DAY
                   ,DECODE(A.CONSULT_GUBUN,'1. 검사결과문의',CONSULT_GUBUN_CNT,0) AS GUBUN_1
                   ,DECODE(A.CONSULT_GUBUN,'2. 검사관련문의',CONSULT_GUBUN_CNT,0) AS GUBUN_2
                   ,DECODE(A.CONSULT_GUBUN,'3. 자가격리(자)관련 문의',CONSULT_GUBUN_CNT,0) AS GUBUN_3
                   ,DECODE(A.CONSULT_GUBUN,'4. 선별진료소(시간)관련 문의',CONSULT_GUBUN_CNT,0) AS GUBUN_4
                   ,DECODE(A.CONSULT_GUBUN,'5. 확진자 관련 문의',CONSULT_GUBUN_CNT,0) AS GUBUN_5
                   ,DECODE(A.CONSULT_GUBUN,'6. 역학조사 관련문의',CONSULT_GUBUN_CNT,0) AS GUBUN_6
                   ,DECODE(A.CONSULT_GUBUN,'7. 임시생활시설관련 문의',CONSULT_GUBUN_CNT,0) AS GUBUN_7
                   ,DECODE(A.CONSULT_GUBUN,'8. 사회적 거리두기 관련 문의',CONSULT_GUBUN_CNT,0) AS GUBUN_8
                   ,DECODE(A.CONSULT_GUBUN,'9. 방역관련 문의',CONSULT_GUBUN_CNT,0) AS GUBUN_9
                   ,DECODE(A.CONSULT_GUBUN,'10. 기타 문의',CONSULT_GUBUN_CNT,0) AS GUBUN_10
                 FROM   
                (
                    SELECT 
                        TO_CHAR(TO_DATE('20200101', 'YYYYMMDD')+LEVEL-1, 'YYYYMMDD') ST_DAY
                      FROM DUAL
                    CONNECT BY LEVEL <= (TO_DATE(to_char(sysdate,'YYYYMMDD'), 'YYYYMMDD')-TO_DATE('20200101', 'YYYYMMDD')+1)
                )ST_DATE,
                (       
                    SELECT WRITE_DATE,CONSULT_GUBUN,COUNT(1) AS CONSULT_GUBUN_CNT
                    FROM CORONA_CONSULT_STATUS
                    WHERE DEL_YN='0'
                    GROUP BY WRITE_DATE,CONSULT_GUBUN
                ) A
                WHERE ST_DATE.ST_DAY = A.WRITE_DATE(+)
        )
        GROUP BY ST_DAY
        ORDER BY ST_DAY ASC
		]]>
	</select>
	
	<select id="selectClinicStatisticsList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
        SELECT
            ST_DAY
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=ST_DATE.ST_DAY) as clinic_total
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=ST_DATE.ST_DAY AND SUSPICION_GUBUN = '해외' ) as clinic_oversea
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=ST_DATE.ST_DAY AND SUSPICION_GUBUN = '강남구') as clinic_gangnam
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=ST_DATE.ST_DAY AND SUSPICION_GUBUN = '타지역') as clinic_tasigu
            
        FROM
        (
            SELECT TO_CHAR(TO_DATE('20200101', 'YYYYMMDD')+LEVEL-1, 'YYYYMMDD') ST_DAY
              FROM DUAL
            CONNECT BY LEVEL <= (TO_DATE(to_char(sysdate,'YYYYMMDD'), 'YYYYMMDD')-TO_DATE('20200101', 'YYYYMMDD')+1)
        )ST_DATE
		]]>
	</select>

<select id="selectTotalExMiddle" parameterType="hashmap" resultType="hashmap">
            SELECT 
                ORG_DONG
                ,COUNT(1) AS ORG_DONG_CNT
            FROM CORONA_CONFIRM_STATUS CCS
            WHERE del_yn = 0
            AND ORG_GUBUN !=  '강남구'
			<if test='ACCUM != "Y"'>
				AND CONFIRM_DATE = #{WRITE_DATE} 
			</if>
            GROUP BY ORG_DONG
</select>

<select id="selectTotalExOverseaMiddle" parameterType="hashmap" resultType="hashmap">
            SELECT 
                ORG_ADDRESS
                ,COUNT(1) AS ORG_ADDRESS_CNT
                ,GROUPING(ORG_ADDRESS) ODR_ORG_ADDRESS
            FROM CORONA_CONFIRM_STATUS
            WHERE del_yn = 0
			AND ORG_GUBUN =  '해외'
            GROUP BY ROLLUP(ORG_ADDRESS)
            ORDER BY ODR_ORG_ADDRESS DESC
</select>


<select id="selectConfirmStatus" parameterType="hashmap" resultType="hashmap">
			<![CDATA[
			SELECT 
					#{showdate} as showdate
					,#{seldate} as seldate
			        ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{seldate} ) AS cur_total_cnt
			        ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{seldate} AND INFECT_GUBUN = '해외') AS oversea
			]]>
		             <foreach collection="SHOW_LIST" item="i" index="index"> 
		                    ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{seldate} AND INFECT_DAE = #{i}) AS "SHOW_${index}"
		             </foreach>
					<![CDATA[
		             ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{seldate} AND INFECT_GUBUN != '해외' AND INFECT_DAE not in
		             ]]>
			        <foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
			            #{i}
			        </foreach>

					<![CDATA[
						) AS ETC
						
			        ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N') AS accum_cur_total_cnt
			        ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND INFECT_GUBUN = '해외') AS accum_oversea
					]]>
		             <foreach collection="SHOW_LIST" item="i" index="index"> 
		                    ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND INFECT_DAE = #{i}) AS "ACCUM_SHOW_${index}"
		             </foreach>
					<![CDATA[
		             ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN = '0' AND TA_CONFIRM_YN ='N' AND INFECT_GUBUN != '해외' AND INFECT_DAE not in
		             ]]>
			        <foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
			            #{i}
			        </foreach>

					<![CDATA[
						) AS ACCUM_ETC
					]]>
					
			  FROM DUAL
</select>

<!-- 확진자 노출 -->
<select id="selectConfirmShow" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
					SHOW_GUBUN
					,SHOW_LIST
			  FROM CORONA_SHOW_LIST
			  WHERE SHOW_GUBUN = 'CONFIRM'
		]]>
</select>

<!-- 확진자  합계 -->
<select id="selectConfirmSum" parameterType="hashmap" resultType="hashmap">
			SELECT
                (select COUNT(1) from CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{WRITE_DATE}) AS CONFIRM_DAY_TOTAL
                ,(select COUNT(1) from CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN ='N') AS CONFIRM_ACCUM_TOTAL
                
				
				,(select COUNT(1) from CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{WRITE_DATE} AND INFECT_GUBUN = '해외') AS CONFIRM_DAY_OVERSEA
				
				<foreach collection="SHOW_LIST" item="i" index="index"> 
                    ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{WRITE_DATE} AND INFECT_GUBUN != '해외' AND INFECT_DAE = #{i}) AS "CONFIRM_DAY_${index}"
				</foreach>
                
                ,(select COUNT(1) from CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{WRITE_DATE} AND INFECT_GUBUN != '해외'
						AND INFECT_GUBUN != '해외' AND INFECT_DAE not in
						<foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
			            #{i}
			        	</foreach>
				) AS CONFIRM_DAY_ETC
				
				
				,(select COUNT(1) from CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{WRITE_DATE} AND INFECT_GUBUN = '해외') AS CONFIRM_DAY_HOS_OVERSEA
				
				<foreach collection="SHOW_LIST" item="i" index="index"> 
                    ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND CONFIRM_DATE = #{WRITE_DATE} AND INFECT_GUBUN != '해외' AND INFECT_DAE = #{i}) AS "CONFIRM_DAY_HOS_${index}"
				</foreach>
                
                ,(select COUNT(1) from CORONA_CONFIRM_STATUS 
                		WHERE DEL_YN= '0'
                		AND TA_CONFIRM_YN ='N' 
                		AND CONFIRM_DATE = #{WRITE_DATE}
                		AND INFECT_GUBUN != '해외' 
                		AND INFECT_DAE not in
						<foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
			            #{i}
			        	</foreach>
				) AS CONFIRM_DAY_HOS_ETC
				
                                
                
                ,(select COUNT(1) from CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND INFECT_GUBUN = '해외') AS CONFIRM_ACCUM_OVERSEA
                
				<foreach collection="SHOW_LIST" item="i" index="index"> 
                    ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND INFECT_GUBUN != '해외' AND INFECT_DAE = #{i}) AS "CONFIRM_ACCUM_${index}"
				</foreach>
                
                ,(select COUNT(1) from CORONA_CONFIRM_STATUS 
                		WHERE DEL_YN= '0' 
                		AND TA_CONFIRM_YN ='N'
                		AND INFECT_GUBUN != '해외' 
						AND INFECT_DAE not in
						<foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
			            #{i}
			        	</foreach>
				 ) AS CONFIRM_ACCUM_ETC
				 
				 
                ,(select COUNT(1) from CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND INFECT_GUBUN = '해외') AS CONFIRM_ACCUM_HOS_OVERSEA
                
				<foreach collection="SHOW_LIST" item="i" index="index"> 
                    ,(select count(1) from CORONA_CONFIRM_STATUS where DEL_YN= '0' AND TA_CONFIRM_YN ='N' AND INFECT_GUBUN != '해외' AND INFECT_DAE = #{i}) AS "CONFIRM_ACCUM_HOS_${index}"
				</foreach>
                
                ,(select COUNT(1) from CORONA_CONFIRM_STATUS 
                		WHERE DEL_YN= '0'
                		AND TA_CONFIRM_YN ='N'
                		AND INFECT_GUBUN != '해외' 
						AND INFECT_DAE not in
						<foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
			            #{i}
			        	</foreach>
				 ) AS CONFIRM_ACCUM_HOS_ETC
				 
              FROM DUAL
</select>

<select id="selectConfirmDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CELL_NUM
					,PATIENT_NUM
					,PATIENT_NAME
					,CONTACT_NUM
					,CONTACT_NAME
					,CONFIRM_GRADE
					,SEX
					,BIRTH
					,JOB
					,ORG_ADDRESS
					,ORG_ADDRESS_DTL
					,INFECT_GUBUN
					,INFECT_DONG
					,INFECT_DAE
					,INFECT_SO
					,INFECT_ASFECT_AREA
					,INFECT_ASFECT_AREA_DTL
					,CONFIRM_DATE
					,HOSPITAL
					,DISCHARGE_DATE
					,REMARK
					,INS_ID
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
            FROM CORONA_CONFIRM_STATUS 
            WHERE DEL_YN = 0        
            AND TA_CONFIRM_YN ='N'      
		]]>
		
			<if test="INFECT_GUBUN =='해외'">
				AND INFECT_GUBUN =   #{INFECT_GUBUN}
			</if>
		
			<if test="INFECT_DAE != '' and INFECT_DAE != 'undefined'">
				<if test="INFECT_DAE != '기타'">
					AND INFECT_DAE =  #{INFECT_DAE}
				</if>
			
				<if test="INFECT_DAE == '기타'">
					AND INFECT_GUBUN != '해외' AND INFECT_DAE not in('신천지','대구','콜센터','분당재생병원','이태원','삼성서울병원','확진자접촉자')
				</if>
				
				
				<if test="INFECT_SO != ''">
					AND INFECT_SO =  #{INFECT_SO}
				</if>
			</if>
			
		<if test="ETC_GUBUN == '병원'">
			<if test="ETC_GUBUN_CONDITION != '미입력'">
			AND HOSPITAL =  #{ETC_GUBUN_CONDITION}
			</if>
			
			<if test="ETC_GUBUN_CONDITION == '미입력'">
			AND HOSPITAL IS NULL
			</if>
		</if>

		<if test="WRITE_DATE != null and WRITE_DATE !='' and WRITE_DATE !='누적' and WRITE_DATE !='undefined'">
		AND WRITE_DATE = #{WRITE_DATE}
		</if>
		ORDER BY WRITE_DATE,INS_DATE DESC		
</select>

<select id="selectConfirmJipdanDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CELL_NUM
					,PATIENT_NUM
					,PATIENT_NAME
					,CONTACT_NUM
					,CONTACT_NAME
					,CONFIRM_GRADE
					,SEX
					,BIRTH
					,JOB
					,ORG_ADDRESS
					,ORG_ADDRESS_DTL
					,INFECT_GUBUN
					,INFECT_DONG
					,INFECT_DAE
					,INFECT_SO
					,INFECT_ASFECT_AREA
					,INFECT_ASFECT_AREA_DTL
					,CONFIRM_DATE
					,HOSPITAL
					,DISCHARGE_DATE
					,REMARK
					,INS_ID
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
            FROM CORONA_CONFIRM_STATUS 
            WHERE DEL_YN = 0              
		]]>
		
			AND INFECT_GUBUN =   '강남구'
			AND INFECT_JIPDAN_GUBUN = '집단'
			
		<if test="JIPDAN_DIVIDE == 'gannam'">
			 AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN = '강남구'
		</if>
		<if test="JIPDAN_DIVIDE == 'tasigu'">
			 AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN != '강남구'
		</if>
		<if test="JIPDAN_DIVIDE == 'taconfirm'">
			 AND TA_CONFIRM_YN = 'Y' AND ORG_GUBUN != '강남구'
		</if>				
			
		<if test="JIPDAN_INFECT_DAE != '' and JIPDAN_INFECT_DAE != 'undefined'">
			AND INFECT_DAE =  #{JIPDAN_INFECT_DAE}
		</if>
			
		ORDER BY INS_DATE DESC		
</select>


 
<select id="selectConfirmMaplist" parameterType="hashmap" resultType="hashmap">
     SELECT      
         ROWNUM AS INDEX_SEQ,
         A.INFECT_DAE AS INFECT_DAE,
         A.INFECT_ASFECT_AREA AS INFECT_ASFECT_AREA,
         A.GANGNAM_CNT AS GANGNAM_CNT,
         A.TASIGU_CNT AS TASIGU_CNT,
         A.TA_CONFIRM_CNT AS TA_CONFIRM_CNT
     FROM (
         SELECT 

         INFECT_DAE,
             MAX (INFECT_ASFECT_AREA) AS INFECT_ASFECT_AREA,
             NVL (SUM ( (SELECT 1 FROM CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN = '강남구' AND ID = CCONS.ID)),0) AS GANGNAM_CNT,
             NVL (SUM ( (SELECT 1 FROM CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN != '강남구' AND ID = CCONS.ID)),0) AS TASIGU_CNT,
             NVL (SUM ( (SELECT 1 FROM CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN = 'Y' AND ORG_GUBUN != '강남구' AND ID = CCONS.ID)),0) AS TA_CONFIRM_CNT
        FROM CORONA_CONFIRM_STATUS CCONS
           WHERE DEL_YN = 0 
           AND INFECT_GUBUN = '강남구' 
           AND INFECT_JIPDAN_GUBUN = '집단'
        GROUP BY INFECT_DAE
    ) A
    
    UNION ALL
    
     SELECT 
        100 as INDEX_SEQ,
         INFECT_DAE,
             INFECT_ASFECT_AREA,
             DECODE(TA_CONFIRM_YN,'N',DECODE(ORG_GUBUN,'강남구',1,0),0) AS GANGNAM_CNT,
             DECODE(TA_CONFIRM_YN,'N',DECODE(ORG_GUBUN,'강남구',0,1),0) AS TASIGU_CNT,
             DECODE(TA_CONFIRM_YN,'Y',DECODE(ORG_GUBUN,'강남구',0,1),0) AS TA_CONFIRM_CNT
        FROM CORONA_CONFIRM_STATUS
           WHERE DEL_YN = 0 
           AND INFECT_GUBUN = '강남구' 
           AND INFECT_JIPDAN_GUBUN = '개별'
           AND ICHUP_YN = 'N'


    UNION ALL
    
     SELECT 
        200 as INDEX_SEQ,
         INFECT_DAE,
             INFECT_ASFECT_AREA,
             DECODE(TA_CONFIRM_YN,'N',DECODE(ORG_GUBUN,'강남구',1,0),0) AS GANGNAM_CNT,
             DECODE(TA_CONFIRM_YN,'N',DECODE(ORG_GUBUN,'강남구',0,1),0) AS TASIGU_CNT,
             DECODE(TA_CONFIRM_YN,'Y',DECODE(ORG_GUBUN,'강남구',0,1),0) AS TA_CONFIRM_CNT
        FROM CORONA_CONFIRM_STATUS
           WHERE DEL_YN = 0 
           AND INFECT_GUBUN = '강남구' 
           AND INFECT_JIPDAN_GUBUN = '개별'
           AND ICHUP_YN = 'Y'

</select>


<select id="selectConfirmMapJipdanlist" parameterType="hashmap" resultType="hashmap">
         SELECT 
         	INFECT_DAE,
             MAX (INFECT_ASFECT_AREA) AS INFECT_ASFECT_AREA,
             MAX (INFECT_DONG) AS DONG,
             NVL (SUM ( (SELECT 1 FROM CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN = '강남구' AND ID = CCONS.ID)),0) AS GANGNAM_CNT,
             NVL (SUM ( (SELECT 1 FROM CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN != '강남구' AND ID = CCONS.ID)),0) AS TASIGU_CNT,
             NVL (SUM ( (SELECT 1 FROM CORONA_CONFIRM_STATUS WHERE DEL_YN= '0' AND TA_CONFIRM_YN = 'Y' AND ORG_GUBUN != '강남구' AND ID = CCONS.ID)),0) AS TA_CONFIRM_CNT
        FROM CORONA_CONFIRM_STATUS CCONS
           WHERE DEL_YN = 0 
           AND INFECT_GUBUN = '강남구' 
           AND INFECT_JIPDAN_GUBUN = '집단'
        GROUP BY INFECT_DAE
</select>

<select id="selectConfirmJipdanSumStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT
             (SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN='0' AND INFECT_GUBUN = '강남구' AND INFECT_JIPDAN_GUBUN = '집단' AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN = '강남구') AS GANGANG_JIPDAN_TOTAL 
            ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN='0' AND INFECT_GUBUN = '강남구' AND INFECT_JIPDAN_GUBUN = '집단' AND TA_CONFIRM_YN = 'N' AND ORG_GUBUN != '강남구') AS TASIGU_JIPDAN_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CONFIRM_STATUS WHERE DEL_YN='0' AND INFECT_GUBUN = '강남구' AND INFECT_JIPDAN_GUBUN = '집단' AND TA_CONFIRM_YN = 'Y' AND ORG_GUBUN != '강남구') AS TACONFIRM_JIPDAN_TOTAL
        FROM DUAL
		]]>
</select>

<select id="selectIsoMaplist" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT 
	    NAME
	    ,SEX
	    ,SELF_ISO_AREA_DONG
	    ,SELF_ISO_AREA_ADDRESS
	    ,SELF_ISO_AREA_ADDRESS_DTL
	    ,MONITOR_END AS FREE_DATE
	    ,DAMDANG_CLASS
	    ,DAMDANG_NAME
	    ,DAMDANG_CALL
	FROM CORONA_DOMESTIC_CONTACT_STATUS
	WHERE DEL_YN =0
	AND MONITOR_END > TO_CHAR(SYSDATE,'YYYYMMDD')
	
	UNION ALL
	
	SELECT 
	    NAME
	    ,SEX
	    ,SELF_ISO_AREA_DONG
	    ,SELF_ISO_AREA_ADDRESS
	    ,SELF_ISO_AREA_ADDRESS_DTL
	    ,FREE_DATE
	    ,DAMDANG_CLASS
	    ,DAMDANG_NAME
	    ,DAMDANG_CALL
	FROM CORONA_OVERSEA_STATUS
	WHERE DEL_YN =0
	AND FREE_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	]]>
</select>
 

 

<select id="selectConfirmMiddleOversea" parameterType="hashmap" resultType="hashmap">
		  
					SELECT
						REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
					<if test="DEPART != 'accum'">
						,#{WRITE_DATE} as WRITE_DATE 
					</if>
                        ,INFECT_DAE
                        , INFECT_SO
                        , COUNT (1) AS INFECT_SO_CNT
                        ,GROUPING(INFECT_DAE) ODR_DAE
                        ,GROUPING(INFECT_SO) ODR_SO
                    FROM CORONA_CONFIRM_STATUS
                   	WHERE del_yn = 0 
                   	AND TA_CONFIRM_YN ='N'    
					AND INFECT_GUBUN = '해외'
					<if test="DEPART != 'accum'">
						AND CONFIRM_DATE = #{WRITE_DATE} 
					</if>
                GROUP BY ROLLUP(INFECT_DAE, INFECT_SO)
            ORDER BY ODR_DAE DESC,INFECT_DAE,ODR_SO ASC
</select>


<select id="selectConfirmMiddle" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		  
					SELECT
						REGEXP_REPLACE(#{WRITE_DATE} , '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
						,#{WRITE_DATE} 
                        ,INFECT_DAE
                        , INFECT_SO
                        , COUNT (1) AS INFECT_SO_CNT
                        ,GROUPING(INFECT_DAE) ODR_DAE
                        ,GROUPING(INFECT_SO) ODR_SO
                    FROM CORONA_CONFIRM_STATUS
                   WHERE del_yn = 0 
                   AND TA_CONFIRM_YN ='N'    
                   ]]>
                   
					<if test="INFECT_DAE != 'etc'">
						AND INFECT_DAE =  #{INFECT_DAE}
					</if>
				
					<if test="INDEX == 'etc'">
						AND INFECT_GUBUN != '해외' AND INFECT_DAE not in
						<foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
			            #{i}
			        	</foreach>
					</if>
						
					
					
					<if test="DEPART != 'accum'">
						AND CONFIRM_DATE = #{WRITE_DATE} 
					</if>
                GROUP BY ROLLUP(INFECT_DAE, INFECT_SO)
            ORDER BY ODR_DAE DESC,INFECT_DAE,ODR_SO DESC
</select>


<select id="selectConfirmMiddleHospital" parameterType="hashmap" resultType="hashmap">
		SELECT
			REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
		<if test="DEPART != 'accum'">
			,#{WRITE_DATE} as WRITE_DATE
		</if>
		    ,HOSPITAL
		    ,COUNT(1) HOSPITAL_CNT
		    ,GROUPING(HOSPITAL) ODR_HOSPITAL
		     fROM CORONA_CONFIRM_STATUS
		WHERE del_yn = 0 
		AND TA_CONFIRM_YN ='N'    
		<if test="INDEX == 'oversea'">
			AND INFECT_GUBUN = '해외' 
		</if>
		<if test="INDEX != 'oversea'">
			<if test="INFECT_DAE != 'etc'">
				AND INFECT_DAE = #{INFECT_DAE} 
			</if>
			<if test="INFECT_DAE == 'etc'">
				AND INFECT_GUBUN != '해외' AND INFECT_DAE not in
				<foreach collection="SHOW_LIST" item="i" index="index"  open="(" close=")" separator=",">
	            #{i}
	        	</foreach>
			</if>
		</if>
		<if test="DEPART != 'accum'">
			AND CONFIRM_DATE = #{WRITE_DATE} 
		</if>
		GROUP BY HOSPITAL
</select>


<select id="selectConfirmAccumMiddleHospital" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT
			#{INFECT_GUBUN} as INFECT_GUBUN 
			,#{INFECT_DAE} as INFECT_DAE
			,'누적' as WRITE_DATE_SHOW
			,'누적' as WRITE_DATE
		    ,HOSPITAL
		    ,COUNT(1) HOSPITAL_CNT
		    ,GROUPING(HOSPITAL) ODR_HOSPITAL
		     fROM CORONA_CONFIRM_STATUS
		WHERE del_yn = 0 
		AND TA_CONFIRM_YN ='N'    
		]]>
		<if test="INFECT_GUBUN != ''">
			AND INFECT_GUBUN = #{INFECT_GUBUN} 
		</if>
		<if test="INFECT_DAE != ''">
			<if test="INFECT_DAE != 'other'">
				AND INFECT_DAE = #{INFECT_DAE} 
			</if>
			<if test="INFECT_DAE == 'other'">
				AND INFECT_GUBUN != '해외' AND INFECT_DAE not in('신천지','대구','콜센터','분당재생병원','이태원','삼성서울병원','확진자접촉자')
			</if>
		</if>
		
		<if test="DEPART != 'accum'">
			AND write_date = #{WRITE_DATE} 
		</if>
		GROUP BY ROLLUP(HOSPITAL)
		union all
		SELECT '누계' AS INFECT_GUBUN,
		       #{INFECT_DAE} AS INFECT_DAE,
		       '' AS WRITE_DATE_SHOW,
		       ''  AS WRITE_DATE,
		       '누계' AS HOSPITAL,
		       (select count(1) from CORONA_CONFIRM_STATUS
				WHERE del_yn = 0 
				
				<if test="INFECT_GUBUN != ''">
					AND INFECT_GUBUN = #{INFECT_GUBUN} 
				</if>
				<if test="INFECT_DAE != ''">
					<if test="INFECT_DAE != 'other'">
						AND INFECT_DAE = #{INFECT_DAE} 
					</if>
					<if test="INFECT_DAE == 'other'">
						AND INFECT_GUBUN != '해외' AND INFECT_DAE not in('신천지','대구','콜센터','분당재생병원','이태원','삼성서울병원','확진자접촉자')
					</if>
				</if>


				) AS HOSPITAL_SO_CNT,
		       2 AS ODR_HOSPITAL
		  FROM DUAL
		
		ORDER BY ODR_HOSPITAL DESC
</select>


<select id="selectIsoStatisticsList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
			SELECT 
                 ST_DAY
                 ,(select count(1) from CORONA_DOMESTIC_CONTACT_STATUS where DEL_YN = '0' AND MONITOR_START <=ST_DATE.ST_DAY AND MONITOR_END > ST_DATE.ST_DAY)
                 + (select count(1) from CORONA_OVERSEA_STATUS where DEL_YN = '0' AND COME_DATE <=ST_DATE.ST_DAY AND FREE_DATE > ST_DATE.ST_DAY) AS due_iso
			FROM
	        (
	            SELECT TO_CHAR(TO_DATE('20200101', 'YYYYMMDD')+LEVEL-1, 'YYYYMMDD') ST_DAY
	              FROM DUAL
	            CONNECT BY LEVEL <= (TO_DATE(to_char(sysdate,'YYYYMMDD'), 'YYYYMMDD')-TO_DATE('20200101', 'YYYYMMDD')+1)
	        )ST_DATE
	        ]]>
</select>


<!-- 자가격리자 현황 해외입국 -->
<select id="selectIsoOverseaMiddle" parameterType="hashmap" resultType="hashmap">
	  SELECT REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW,
	         #{WRITE_DATE} AS WRITE_DATE,
	         #{NAME} AS NAME,
	         '해외' AS ISO_GUBUN,
	         '' AS VISIT_NATION,
             (	
             	SELECT COUNT (1) 
             	FROM CORONA_OVERSEA_STATUS 
             	WHERE DEL_YN = 0 
      	   		<if test="DEPART == 'TODAY'">
					AND WRITE_DATE = #{WRITE_DATE}
				</if>
				
		   		<if test="ISO_GUBUN == 'SELF'">
					AND FREE_DATE <![CDATA[<]]> #{WRITE_DATE}
				</if>	
				
		   		<if test="ISO_GUBUN == 'FREE'">
					AND FREE_DATE = #{WRITE_DATE}
				</if>	
             
             ) 
	         + (
	         	SELECT COUNT (1) 
	         	FROM CORONA_DOMESTIC_CONTACT_STATUS 
	         	WHERE DEL_YN = 0 
  		   		<if test="DEPART == 'TODAY'">
					AND WRITE_DATE = #{WRITE_DATE}
				</if>
				
		   		<if test="ISO_GUBUN == 'SELF'">
					AND MONITOR_END <![CDATA[<]]> #{WRITE_DATE}
				</if>	
				
		   		<if test="ISO_GUBUN == 'FREE'">
					AND MONITOR_END = #{WRITE_DATE}
				</if>	
         	)
	         AS VISIT_NATION_CNT,
	         2 ODR_VISIT_NATION
	    FROM DUAL
		UNION ALL

		  SELECT    
  					REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
					,#{WRITE_DATE} as WRITE_DATE
					,#{NAME} as NAME
	  				,'해외' AS ISO_GUBUN
		            ,VISIT_NATION
		         ,COUNT(1) AS VISIT_NATION_CNT
		         ,GROUPING(VISIT_NATION) ODR_VISIT_NATION
		    FROM CORONA_OVERSEA_STATUS
		   WHERE DEL_YN = 0
		   
	   		<if test="DEPART == 'TODAY'">
				AND WRITE_DATE = #{WRITE_DATE}
			</if>
			
	   		<if test="ISO_GUBUN == 'SELF'">
				AND FREE_DATE <![CDATA[>]]> #{WRITE_DATE}
			</if>	
			
	   		<if test="ISO_GUBUN == 'FREE'">
				AND FREE_DATE = #{WRITE_DATE}
			</if>			

		GROUP BY ROLLUP(VISIT_NATION)
		ORDER BY ODR_VISIT_NATION DESC
</select>

<!-- 자가격리자 현황 국내-->
<select id="selectIsoDomMiddle" parameterType="hashmap" resultType="hashmap">
		  SELECT    
					REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
					,#{WRITE_DATE} as WRITE_DATE
					,#{NAME} as NAME
		  			,'국내' AS ISO_GUBUN
		            ,SELF_ISO_AREA_DONG
		         ,COUNT(1) AS SELF_ISO_AREA_DONG_CNT
		         ,GROUPING(SELF_ISO_AREA_DONG) ODR_SELF_ISO_AREA_DONG
		    FROM CORONA_DOMESTIC_CONTACT_STATUS
		   WHERE DEL_YN = 0

		   
	   		<if test="DEPART == 'TODAY'">
				AND WRITE_DATE = #{WRITE_DATE}
			</if>
			
	   		<if test="ISO_GUBUN == 'SELF'">
				AND MONITOR_END <![CDATA[>]]> #{WRITE_DATE}
			</if>	
			
	   		<if test="ISO_GUBUN == 'FREE'">
				AND MONITOR_END = #{WRITE_DATE}
			</if>			

		GROUP BY ROLLUP(SELF_ISO_AREA_DONG)
		ORDER BY ODR_SELF_ISO_AREA_DONG DESC
</select>


<!-- 상담민원 리스트-->
<select id="selectConsultMiddle" parameterType="hashmap" resultType="hashmap">
        SELECT
            (SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_TIME BETWEEN '09:00' AND '22:00') AS TOTAL_JU
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_TIME NOT BETWEEN '09:00' AND '22:00') AS TOTAL_YA
          
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '1. 검사결과문의') AS DAY_1
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '2. 검사관련문의') AS DAY_2
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '3. 자가격리(자)관련 문의') AS DAY_3
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '4. 선별진료소(시간)관련 문의') AS DAY_4
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '5. 확진자 관련 문의') AS DAY_5
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '6. 역학조사 관련문의') AS DAY_6
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '7. 임시생활시설관련 문의') AS DAY_7
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '8. 사회적 거리두기 관련 문의') AS DAY_8
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '9. 방역관련 문의') AS DAY_9
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE = #{SELDATE} AND CONSULT_GUBUN = '10. 기타 문의') AS DAY_10
            
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '1. 검사결과문의') AS ACCUM_1
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '2. 검사관련문의') AS ACCUM_2
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '3. 자가격리(자)관련 문의') AS ACCUM_3
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '4. 선별진료소(시간)관련 문의') AS ACCUM_4
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '5. 확진자 관련 문의') AS ACCUM_5
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '6. 역학조사 관련문의') AS ACCUM_6
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '7. 임시생활시설관련 문의') AS ACCUM_7
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '8. 사회적 거리두기 관련 문의') AS ACCUM_8
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '9. 방역관련 문의') AS ACCUM_9
            ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_GUBUN = '10. 기타 문의') AS ACCUM_10
            
        FROM DUAL
</select>


<!--선별진료소 중간 -->
<select id="selectClinicMiddle" parameterType="hashmap" resultType="hashmap">
		  SELECT    
					REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
	                ,#{WRITE_DATE} AS WRITE_DATE
	                ,#{DEPART} AS DEPART
	                ,#{ISO} AS ISO
					,NVL(sum((SELECT 1 FROM CORONA_CONFIRM_STATUS CCONFIRMS 
                            WHERE CCONFIRMS.DEL_YN = 0
                            AND CCONFIRMS.PATIENT_NAME = CCLINICS.NAME
                            AND CCONFIRMS.BIRTH = CCLINICS.BIRTH
                            AND CCONFIRMS.CELL_NUM = CCLINICS.CELL_NUM
                            AND ROWNUM = 1
                        )),0) as CONFIRM_CHECK_SUM
	                ,#{SUSPICION_GUBUN}  AS SUSPICION_GUBUN
	                ,'' as SUSPICION_DAE
	                ,COUNT(1) AS SUSPICION_DAE_CNT
	                ,2 as ODR_SUSPICION_DAE
	            FROM CORONA_CLINIC_STATUS CCLINICS
	            WHERE del_yn = 0
		   		<if test="DEPART == 'TODAY'">
					AND WRITE_DATE = #{WRITE_DATE}
				</if>
				
		   		<if test="ISO == 'ISO_EX'">
					AND INSPECTION_CASE != '자가격리해제자'
				</if>
				
		   		<if test="ISO == 'ISO'">
					AND INSPECTION_CASE = '자가격리해제자'
				</if>
				
				UNION ALL
				
          		SELECT    
                    REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
	                ,#{WRITE_DATE} AS WRITE_DATE
	                ,#{DEPART} AS DEPART
	                ,#{ISO} AS ISO
					,NVL(sum((SELECT 1 FROM CORONA_CONFIRM_STATUS CCONFIRMS 
                            WHERE CCONFIRMS.DEL_YN = 0
                            AND CCONFIRMS.PATIENT_NAME = CCLINICS.NAME
                            AND CCONFIRMS.BIRTH = CCLINICS.BIRTH
                            AND CCONFIRMS.CELL_NUM = CCLINICS.CELL_NUM
                            AND ROWNUM = 1
                        )),0) as CONFIRM_CHECK_SUM
	                ,MAX(SUSPICION_GUBUN)  AS SUSPICION_GUBUN
                    ,SUSPICION_DAE
                    ,COUNT(1) AS SUSPICION_DAE_CNT
                    ,GROUPING(SUSPICION_DAE) ODR_SUSPICION_DAE
                FROM CORONA_CLINIC_STATUS CCLINICS
                WHERE del_yn = 0
	   		<if test="DEPART == 'TODAY'">
				AND WRITE_DATE = #{WRITE_DATE}
			</if>
			
	   		<if test="SUSPICION_GUBUN != ''">
				AND SUSPICION_GUBUN = #{SUSPICION_GUBUN}
			</if>	
			
		   		<if test="ISO == 'ISO_EX'">
					AND INSPECTION_CASE != '자가격리해제자'
				</if>
				
		   		<if test="ISO == 'ISO'">
					AND INSPECTION_CASE = '자가격리해제자'
				</if>
                GROUP BY ROLLUP(SUSPICION_DAE)
                ORDER BY SUSPICION_DAE DESC
</select>


<select id="selectClinicMiddleSumStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
        SELECT
             (SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자') AS CUR_CLINIC_TOTAL 
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자' AND SUSPICION_GUBUN = '강남구') AS CUR_CLINIC_GANGNAM_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자' AND SUSPICION_GUBUN = '타지역') AS CUR_CLINIC_TASIGU_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자' AND SUSPICION_GUBUN = '해외') AS CUR_CLINIC_OVERSEA_TOTAL
            
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자') AS CUR_CLINIC_ISO_TOTAL 
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자' AND SUSPICION_GUBUN = '강남구') AS CUR_CLINIC_ISO_GANGNAM_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자' AND SUSPICION_GUBUN = '타지역') AS CUR_CLINIC_ISO_TASIGU_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자' AND SUSPICION_GUBUN = '해외') AS CUR_CLINIC_ISO_OVERSEA_TOTAL
            
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0') AS CUR_ACCUM_CLINIC_TOTAL 
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '강남구') AS CUR_ACCUM_CLINIC_GANGNAM_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '타지역') AS CUR_ACCUM_CLINIC_TASIGU_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '해외') AS CUR_ACCUM_CLINIC_OVERSEA_TOTAL

            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자' AND SUSPICION_GUBUN = '강남구' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_GANGNAM
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자' AND SUSPICION_GUBUN = '타지역' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_TASIGU
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE != '자가격리해제자' AND SUSPICION_GUBUN = '해외' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_OVERSEA
            
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ISO_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자' AND SUSPICION_GUBUN = '강남구' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ISO_GANGNAM
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자' AND SUSPICION_GUBUN = '타지역' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ISO_TASIGU
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{SELDATE} AND INSPECTION_CASE = '자가격리해제자' AND SUSPICION_GUBUN = '해외' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ISO_OVERSEA
            
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ACCUM_TOTAL
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND SUSPICION_GUBUN = '강남구' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ACCUM_GANGNAM
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND SUSPICION_GUBUN = '타지역' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ACCUM_TASIGU
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS B WHERE DEL_YN='0' AND SUSPICION_GUBUN = '해외' AND ( B.NAME,B.BIRTH,B.CELL_NUM) IN (SELECT A.PATIENT_NAME,A.BIRTH,A.CELL_NUM FROM CORONA_CONFIRM_STATUS A WHERE A.DEL_YN = 0)) AS CUR_CONFIRM_ACCUM_OVERSEA
            
        FROM DUAL
		]]>
</select>


<select id="selectClinicGangnamMiddleList" parameterType="hashmap" resultType="hashmap">
		SELECT SUM (NVL2 (B.PATIENT_NAME, 1, 0)) AS CONFIRM_CHECK_SUM
               	,A.SUSPICION_GUBUN
                  ,A.SUSPICION_DAE
                  ,COUNT(1) AS SUSPICION_DAE_CNT
			  FROM CORONA_CLINIC_STATUS A,
			       (SELECT DISTINCT PATIENT_NAME, BIRTH, CELL_NUM
			          FROM CORONA_CONFIRM_STATUS
			         WHERE DEL_YN = '0') B
			 WHERE     A.del_yn = 0
			       AND A.SUSPICION_GUBUN = '강남구'
			       AND A.NAME = B.PATIENT_NAME(+)
			       AND A.BIRTH = B.BIRTH(+)
			       AND A.CELL_NUM = B.CELL_NUM(+)
              
   		<if test="SELDATE !=''">
			AND A.CLINIC_VISIT_DATE = #{SELDATE}
		</if>
		
   		<if test="ISO == 'ISO_EX'">
			AND A.INSPECTION_CASE != '자가격리해제자'
		</if>
		
   		<if test="ISO == 'ISO'">
			AND A.INSPECTION_CASE = '자가격리해제자'
		</if>
             GROUP BY A.SUSPICION_GUBUN,A.SUSPICION_DAE
             ORDER BY DECODE(A.SUSPICION_DAE,'신사동',1
											,'논현동',2
											,'압구정동',3
											,'청담동',4
											,'삼성동',5
											,'대치동',6
											,'역삼동',7
											,'도곡동',8
											,'개포동',9
											,'세곡동',10
											,'자곡동',11
											,'일원본동',12
											,'일원동',13
											,'수서동',14,15
											) ASC
</select>



<select id="selectClinicTasiguMiddleList" parameterType="hashmap" resultType="hashmap">
			SELECT SUM (NVL2 (B.PATIENT_NAME, 1, 0)) AS CONFIRM_CHECK_SUM,
			         A.SUSPICION_DAE,
			         A.SUSPICION_SO,
			         COUNT (1) AS SUSPICION_SO_CNT
			  FROM CORONA_CLINIC_STATUS A,
			       (SELECT DISTINCT PATIENT_NAME, BIRTH, CELL_NUM
			          FROM CORONA_CONFIRM_STATUS
			         WHERE DEL_YN = '0') B
			 WHERE     A.del_yn = 0
			       AND A.SUSPICION_GUBUN = '타지역'
			       AND A.NAME = B.PATIENT_NAME(+)
			       AND A.BIRTH = B.BIRTH(+)
			       AND A.CELL_NUM = B.CELL_NUM(+)
			   
		   		<if test="SELDATE !=''">
					AND A.CLINIC_VISIT_DATE = #{SELDATE}
				</if>
				
		   		<if test="ISO == 'ISO_EX'">
					AND A.INSPECTION_CASE != '자가격리해제자'
				</if>
				
		   		<if test="ISO == 'ISO'">
					AND A.INSPECTION_CASE = '자가격리해제자'
				</if>
			
			GROUP BY A.SUSPICION_DAE,A.SUSPICION_SO
			ORDER BY DECODE(A.SUSPICION_DAE,'서울특별시',1,2),A.SUSPICION_DAE,A.SUSPICION_SO DESC
</select>

<select id="selectClinicOverseaMiddleList" parameterType="hashmap" resultType="hashmap">
			SELECT SUM (NVL2 (B.PATIENT_NAME, 1, 0)) AS CONFIRM_CHECK_SUM,
			       A.SUSPICION_DAE,
			       COUNT (1) AS SUSPICION_DAE_CNT
			  FROM CORONA_CLINIC_STATUS A,
			       (SELECT DISTINCT PATIENT_NAME, BIRTH, CELL_NUM
			          FROM CORONA_CONFIRM_STATUS
			         WHERE DEL_YN = '0') B
			 WHERE     A.del_yn = 0
			       AND A.SUSPICION_GUBUN = '해외'
			       AND A.NAME = B.PATIENT_NAME(+)
			       AND A.BIRTH = B.BIRTH(+)
			       AND A.CELL_NUM = B.CELL_NUM(+)
			   
		   		<if test="SELDATE !=''">
					AND A.CLINIC_VISIT_DATE = #{SELDATE}
				</if>
				
		   		<if test="ISO == 'ISO_EX'">
					AND A.INSPECTION_CASE != '자가격리해제자'
				</if>
				
		   		<if test="ISO == 'ISO'">
					AND A.INSPECTION_CASE = '자가격리해제자'
				</if>
               
           GROUP BY A.SUSPICION_DAE
            ORDER BY DECODE (A.SUSPICION_DAE, '미국',1
                                            ,'중국',2
                                            ,'유럽',3
                                            ,4) ASC,A.SUSPICION_DAE
</select>



<select id="selectClinicMiddle2" parameterType="hashmap" resultType="hashmap">
			SELECT REGEXP_REPLACE (#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3')
			          AS WRITE_DATE_SHOW,
			       #{WRITE_DATE} AS WRITE_DATE,
			       #{DEPART} AS DEPART,
			       #{ISO} AS ISO,
					NVL(sum((SELECT 1 FROM CORONA_CONFIRM_STATUS CCONFIRMS 
                            WHERE CCONFIRMS.DEL_YN = 0
                            AND CCONFIRMS.PATIENT_NAME = CCLINICS.NAME
                            AND CCONFIRMS.BIRTH = CCLINICS.BIRTH
                            AND CCONFIRMS.CELL_NUM = CCLINICS.CELL_NUM
                            AND ROWNUM = 1
                        )),0) as CONFIRM_CHECK_SUM,
			       #{SUSPICION_GUBUN} AS SUSPICION_GUBUN,
			       '' AS SUSPICION_DAE,
			       '' AS SUSPICION_SO,
			       COUNT (1) AS SUSPICION_SO_CNT,
			       2 AS ODR_SUSPICION_DAE,
			       2 AS ODR_SUSPICION_SO
			  FROM CORONA_CLINIC_STATUS CCLINICS
			 WHERE del_yn = 0 
 	   		<if test="DEPART == 'TODAY'">
				AND WRITE_DATE = #{WRITE_DATE}
			</if>
			
		   		<if test="ISO == 'ISO_EX'">
					AND INSPECTION_CASE != '자가격리해제자'
				</if>
				
		   		<if test="ISO == 'ISO'">
					AND INSPECTION_CASE = '자가격리해제자'
				</if>
			UNION ALL
			  SELECT REGEXP_REPLACE (#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS WRITE_DATE_SHOW,
			         #{WRITE_DATE} AS WRITE_DATE,
			         #{DEPART} AS DEPART,
			         #{ISO} AS ISO,
					NVL(sum((SELECT 1 FROM CORONA_CONFIRM_STATUS CCONFIRMS 
                            WHERE CCONFIRMS.DEL_YN = 0
                            AND CCONFIRMS.PATIENT_NAME = CCLINICS.NAME
                            AND CCONFIRMS.BIRTH = CCLINICS.BIRTH
                            AND CCONFIRMS.CELL_NUM = CCLINICS.CELL_NUM
                            AND ROWNUM = 1
                        )),0) as CONFIRM_CHECK_SUM,
			         MAX (SUSPICION_GUBUN) AS SUSPICION_GUBUN,
			         SUSPICION_DAE,
			         SUSPICION_SO,
			         COUNT (1) AS SUSPICION_SO_CNT,
			         GROUPING (SUSPICION_DAE) ODR_SUSPICION_DAE,
			         GROUPING (SUSPICION_SO) ODR_SUSPICION_SO
			    FROM CORONA_CLINIC_STATUS CCLINICS
			   WHERE     del_yn = 0
	   		<if test="DEPART == 'TODAY'">
				AND WRITE_DATE = #{WRITE_DATE}
			</if>
			
	   		<if test="SUSPICION_GUBUN != ''">
				AND SUSPICION_GUBUN = #{SUSPICION_GUBUN}
			</if>	
			
	   		<if test="ISO == 'ISO_EX'">
				AND INSPECTION_CASE != '자가격리해제자'
			</if>
			
	   		<if test="ISO == 'ISO'">
				AND INSPECTION_CASE = '자가격리해제자'
			</if>
			
			GROUP BY ROLLUP (SUSPICION_DAE,SUSPICION_SO)
			ORDER BY SUSPICION_DAE DESC,ODR_SUSPICION_SO DESC
</select>




<!-- 자가격리자 현황 해외입국 -->
<select id="selectIsoOverseaAccumMiddle" parameterType="hashmap" resultType="hashmap">
	  SELECT '' AS WRITE_DATE_SHOW,
	         '' AS WRITE_DATE,
	         '해제 누적인원' AS NAME,
	         '해외' AS ISO_GUBUN,
	         '' AS VISIT_NATION,
             (SELECT COUNT (1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN = 0 AND FREE_DATE <![CDATA[<=]]> #{WRITE_DATE}) 
	         + (SELECT COUNT (1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN = 0 AND MONITOR_END <![CDATA[<=]]> #{WRITE_DATE})
	         AS VISIT_NATION_CNT,
	         2 ODR_VISIT_NATION
	    FROM DUAL
		UNION ALL

		  SELECT    
  					REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
					,#{WRITE_DATE} as WRITE_DATE
					,#{NAME} as NAME
	  				,'해외' AS ISO_GUBUN
		            ,VISIT_NATION
		         ,COUNT(1) AS VISIT_NATION_CNT
		         ,GROUPING(VISIT_NATION) ODR_VISIT_NATION
		    FROM CORONA_OVERSEA_STATUS
		   WHERE DEL_YN = 0
			AND FREE_DATE <![CDATA[<=]]> #{WRITE_DATE}		

		GROUP BY ROLLUP(VISIT_NATION)
		ORDER BY ODR_VISIT_NATION DESC
</select>

<!-- 자가격리자 현황 국내-->
<select id="selectIsoDomAccumMiddle" parameterType="hashmap" resultType="hashmap">
		  SELECT    
					REGEXP_REPLACE(#{WRITE_DATE}, '(.{4})(.{2})(.{2})', '\1-\2-\3') as WRITE_DATE_SHOW
					,#{WRITE_DATE} as WRITE_DATE
					,#{NAME} as NAME
		  			,'국내' AS ISO_GUBUN
		            ,SELF_ISO_AREA_DONG
		         ,COUNT(1) AS SELF_ISO_AREA_DONG_CNT
		         ,GROUPING(SELF_ISO_AREA_DONG) ODR_SELF_ISO_AREA_DONG
		    FROM CORONA_DOMESTIC_CONTACT_STATUS
		   WHERE DEL_YN = 0
			AND MONITOR_END <![CDATA[<=]]> #{WRITE_DATE}		

		GROUP BY ROLLUP(SELF_ISO_AREA_DONG)
		ORDER BY ODR_SELF_ISO_AREA_DONG DESC
</select>

<!--  -->
<select id="selectIsoMiddleSumStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT
		    (SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0' AND COME_DATE = #{SELDATE})
		    + (SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_START = #{SELDATE}) AS CUR_ISO_TOTAL
		
		    ,(SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0'AND COME_DATE = #{SELDATE}) AS CUR_OVERSEA_SUM
		    ,(SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_START = #{SELDATE}) AS CUR_DOM_SUM
		
		    ,(SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0' AND FREE_DATE > #{SELDATE})
		    + (SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_END > #{SELDATE}) AS DUE_ISO_TOTAL
		
		    ,(SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0' AND FREE_DATE > #{SELDATE}) AS DUE_OVERSEA_SUM
		    ,(SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_END > #{SELDATE}) AS DUE_DOM_SUM
		
		    ,(SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0' AND FREE_DATE = #{SELDATE})
		    + (SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_END = #{SELDATE}) AS FREE_ISO_TOTAL
		
		    ,(SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0' AND FREE_DATE = #{SELDATE}) AS FREE_OVERSEA_SUM
		    ,(SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_END = #{SELDATE}) AS FREE_DOM_SUM
		
		    ,(SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0' AND FREE_DATE <= #{SELDATE})
		    + (SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_END <= #{SELDATE}) AS ISO_TOTAL
		
		    ,(SELECT COUNT(1) FROM CORONA_OVERSEA_STATUS WHERE DEL_YN='0' AND FREE_DATE <= #{SELDATE}) AS OVERSEA_SUM
		    ,(SELECT COUNT(1) FROM CORONA_DOMESTIC_CONTACT_STATUS WHERE DEL_YN='0' AND MONITOR_END <= #{SELDATE}) AS DOM_SUM
		FROM DUAL
		]]>
</select>


<!-- 자가격리자 현황요약 해외 -->
<select id="selectIsoOverseaMiddleList" parameterType="hashmap" resultType="hashmap">
		
        SELECT 
            SELF_ISO_AREA_DONG
            ,COUNT(1) AS ISO_CNT
        FROM CORONA_OVERSEA_STATUS
        WHERE DEL_YN = 0 
		<if test='CUR == "Y"'>
			AND COME_DATE = #{SELDATE}
		</if>
		
  		<if test='DUE == "Y"'>
			AND FREE_DATE <![CDATA[>]]> #{SELDATE}
		</if>
		
  		<if test='FREE == "Y"'>
			AND FREE_DATE <![CDATA[=]]> #{SELDATE}
		</if>
		
  		<if test='ACCUM == "Y"'>
			AND FREE_DATE <![CDATA[<=]]> #{SELDATE}
		</if>
        GROUP BY SELF_ISO_AREA_DONG
        
</select>

<!-- 자가격리자 현황 국내-->
<select id="selectIsoDomMiddleList" parameterType="hashmap" resultType="hashmap">
        SELECT 
            SELF_ISO_AREA_DONG
            ,COUNT(1) AS ISO_CNT
        FROM CORONA_DOMESTIC_CONTACT_STATUS
        WHERE DEL_YN = 0 
		<if test='CUR == "Y"'>
			AND MONITOR_START = #{SELDATE}
		</if>
		
  		<if test='DUE == "Y"'>
			AND MONITOR_END <![CDATA[>]]> #{SELDATE}
		</if>
		
  		<if test='FREE == "Y"'>
			AND MONITOR_END <![CDATA[=]]> #{SELDATE}
		</if>
		
  		<if test='ACCUM == "Y"'>
			AND MONITOR_END <![CDATA[<=]]> #{SELDATE}
		</if>
        GROUP BY SELF_ISO_AREA_DONG
</select>


<select id="selectDomesticStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
					#{showdate} as showdate
					,#{seldate} as seldate
		            ,(select count(1) from CORONA_DOMESTIC_CONTACT_STATUS where DEL_YN = '0' AND MONITOR_START = #{seldate}) as dom_cur_iso
		            ,(select count(1) from CORONA_DOMESTIC_CONTACT_STATUS where DEL_YN = '0' AND MONITOR_END > #{seldate}) as dom_due_iso
		            ,(select count(1) from CORONA_DOMESTIC_CONTACT_STATUS where DEL_YN = '0' AND MONITOR_END = #{seldate}) as dom_free_iso
		            ,(select count(1) from CORONA_DOMESTIC_CONTACT_STATUS where DEL_YN = '0' AND MONITOR_END <= #{seldate}) as dom_accum_iso
		            ,(select count(1) from CORONA_DOMESTIC_CONTACT_STATUS where DEL_YN = '0') as dom_total_iso
			  FROM DUAL
		]]>
</select>

<select id="selectOverseaStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
					#{showdate} as showdate
					,#{seldate} as seldate
		            ,(select count(1) from CORONA_OVERSEA_STATUS where DEL_YN = '0' AND COME_DATE = #{seldate}) as oversea_cur_iso
		            ,(select count(1) from CORONA_OVERSEA_STATUS where DEL_YN = '0' AND FREE_DATE > #{seldate}) as oversea_due_iso
		            ,(select count(1) from CORONA_OVERSEA_STATUS where DEL_YN = '0' AND FREE_DATE = #{seldate}) as oversea_free_iso
		            ,(select count(1) from CORONA_OVERSEA_STATUS where DEL_YN = '0' AND FREE_DATE <= #{seldate}) as oversea_accum_iso
		            ,(select count(1) from CORONA_OVERSEA_STATUS where DEL_YN = '0') as oversea_total_iso
			  FROM DUAL
		]]>
</select>

<select id="selectIsoOverseaDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CELL_NUM
					,NAME
					,SEX
					,BIRTH
					,JOB
					,ORG_ADDRESS
					,ORG_ADDRESS_DTL
					,SELF_ISO_AREA_DONG
					,SELF_ISO_AREA_ADDRESS
					,SELF_ISO_AREA_ADDRESS_DTL
					,COME_DATE
					,FREE_DATE
					,VISIT_NATION
					,DAMDANG_DEPART
					,DAMDANG_CLASS
					,DAMDANG_POSITION
					,DAMDANG_NAME
					,DAMDANG_CALL
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
            FROM CORONA_OVERSEA_STATUS 
            WHERE DEL_YN = 0              
		]]>
		<if test="ISO_GUBUN == 'CUR'">
		AND COME_DATE = #{SELDATE}
		</if>
		
		<if test="ISO_GUBUN == 'DUE'">
		AND FREE_DATE <![CDATA[>]]> #{SELDATE}
		</if>
		
		<if test="ISO_GUBUN == 'FREE'">
		AND FREE_DATE = #{SELDATE}
		</if>
		
		<if test="ISO_GUBUN == 'ACCUM'">
		AND FREE_DATE <![CDATA[<=]]> #{SELDATE}
		</if>
		
		<if test="ISO_DONG != ''">
		AND SELF_ISO_AREA_DONG = #{ISO_DONG}
		</if>
		
		
		ORDER BY WRITE_DATE,INS_DATE DESC			
</select>

<select id="selectIsoDomesticDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
	                    ,ID
						,WRITE_DATE
						,CELL_NUM
						,NAME
						,SEX
						,BIRTH
						,JOB
						,ORG_ADDRESS
						,ORG_ADDRESS_DTL
						,SELF_ISO_AREA_DONG
						,SELF_ISO_AREA_ADDRESS
						,SELF_ISO_AREA_ADDRESS_DTL
						,PATIENT_NUM
						,PATIENT_NAME
						,CONTACT_NUM
						,CONTACT_NAME
						,FINAL_CONTACT
						,MONITOR_START
						,MONITOR_END
						,CONTACT_ADDRESS
						,CONTACT_TYPE
						,CONTACT_GUBUN
						,PATIENT_YN
						,BALGUB_YN
						,DAMDANG_DEPART
						,DAMDANG_CLASS
						,DAMDANG_POSITION
						,DAMDANG_NAME
						,DAMDANG_CALL
	            FROM CORONA_DOMESTIC_CONTACT_STATUS 
            WHERE DEL_YN = 0              
		]]>
		<if test="ISO_GUBUN == 'CUR'">
		AND MONITOR_START = #{SELDATE}
		</if>
		
		<if test="ISO_GUBUN == 'DUE'">
		AND MONITOR_END <![CDATA[>]]> #{SELDATE}
		</if>
		
		<if test="ISO_GUBUN == 'FREE'">
		AND MONITOR_END = #{SELDATE}
		</if>
		
		<if test="ISO_GUBUN == 'ACCUM'">
		AND MONITOR_END <![CDATA[<=]]> #{SELDATE}
		</if>
		
		<if test="ISO_DONG != ''">
		AND SELF_ISO_AREA_DONG = #{ISO_DONG}
		</if>
		
		
		ORDER BY WRITE_DATE,INS_DATE DESC		
</select>

<!-- 상담민원 현황 -->
<select id="selectConsultStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT
		    #{showdate} as showdate
		    ,#{seldate} as seldate
		    ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE=#{seldate}) AS CUR_ALL
		    ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE=#{seldate} AND CONSULT_TIME BETWEEN '09:00' AND '22:00') AS CUR_JU 
		    ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND WRITE_DATE=#{seldate} AND CONSULT_TIME NOT BETWEEN '09:00' AND '22:00') AS CUR_YA
		    ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0') AS TOTAL_ALL
		    ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_TIME BETWEEN '09:00' AND '22:00') AS TOTAL_JU
		    ,(SELECT COUNT(1) FROM CORONA_CONSULT_STATUS WHERE DEL_YN='0' AND CONSULT_TIME NOT BETWEEN '09:00' AND '22:00') AS TOTAL_YA
		FROM DUAL
		]]>
</select>

<select id="selectConsultDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CONSULT_GUBUN
					,JUYA_GUBUN
					,CONSULT_TIME
					,CONSULT_NAME
					,MINWON_NAME
					,SEX
					,MINWON_PHONE
					,DBMS_LOB.SUBSTR( MINWON_CONTENT, 4000, 1)  as MINWON_CONTENT 
					,DBMS_LOB.SUBSTR( PROCESS_RESULT, 4000, 1)  as PROCESS_RESULT
					,REMARK
					,INS_ID
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
            FROM CORONA_CONSULT_STATUS 
            WHERE DEL_YN = 0              
		]]>
		<if test="CONSULT_DEPART == 'TODAY'">
		AND WRITE_DATE = #{WRITE_DATE}
		</if>
		
		<if test="CONSULT_JUYA_GUBUN != ''">
		AND JUYA_GUBUN = #{CONSULT_JUYA_GUBUN}
		</if>
		
		<if test="CONSULT_CONSULT_GUBUN != ''">
		AND CONSULT_GUBUN = #{CONSULT_CONSULT_GUBUN}
		</if>
		
		ORDER BY WRITE_DATE,INS_DATE DESC		
</select>

<!-- 선별진료소 현황 -->
<select id="selectClinicStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT
            #{showdate} as showdate
            ,#{seldate} as seldate
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE !='자가격리해제자' AND SUSPICION_GUBUN = '해외' ) as clinic_oversea
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE !='자가격리해제자' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE = '유럽') as clinic_eu
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE !='자가격리해제자' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE = '미국') as clinic_un
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE !='자가격리해제자' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE not in('유럽','미국')) as clinic_over_etc
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE !='자가격리해제자' AND SUSPICION_GUBUN != '해외') as clinic_domestic
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE !='자가격리해제자' AND SUSPICION_GUBUN = '강남구') as gangnam_clinic_domestic
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE !='자가격리해제자' AND SUSPICION_GUBUN = '타지역') as ta_clinic_domestic
			,(
                   SELECT COUNT(1) 
                   FROM CORONA_CLINIC_STATUS A
                   ,(SELECT DISTINCT PATIENT_NAME,BIRTH,CELL_NUM FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0') B
                   WHERE A.DEL_YN = '0'
					AND A.INSPECTION_CASE !='자가격리해제자'
			       	AND A.CLINIC_VISIT_DATE=#{seldate}
                   AND A.NAME = B.PATIENT_NAME
                   AND A.BIRTH = B.BIRTH
                   AND A.CELL_NUM = B.CELL_NUM
       		) as confirm_iso_ex_y
			
			
			
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE ='자가격리해제자' AND SUSPICION_GUBUN = '해외' ) as iso_clinic_oversea
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE ='자가격리해제자' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE = '유럽') as iso_clinic_eu
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE ='자가격리해제자' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE = '미국') as iso_clinic_un
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE ='자가격리해제자' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE not in('유럽','미국')) as iso_clinic_over_etc
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE ='자가격리해제자' AND SUSPICION_GUBUN != '해외') as iso_clinic_domestic
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE ='자가격리해제자' AND SUSPICION_GUBUN = '강남구') as iso_gangnam_clinic_domestic
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE ='자가격리해제자' AND SUSPICION_GUBUN = '타지역') as iso_ta_clinic_domestic
			,(
                   SELECT COUNT(1) 
                   FROM CORONA_CLINIC_STATUS A
                   ,(SELECT DISTINCT PATIENT_NAME,BIRTH,CELL_NUM FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0') B
                   WHERE A.DEL_YN = '0'
					AND A.INSPECTION_CASE ='자가격리해제자'
			       	AND A.CLINIC_VISIT_DATE=#{seldate}
                   AND A.NAME = B.PATIENT_NAME
                   AND A.BIRTH = B.BIRTH
                   AND A.CELL_NUM = B.CELL_NUM
       		) as confirm_iso_y
			
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '해외' ) as total_clinic_oversea
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE = '유럽') as total_clinic_eu
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE = '미국') as total_clinic_un
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '해외' and SUSPICION_DAE not in('유럽','미국')) as total_clinic_over_etc
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN != '해외') as total_clinic_domestic
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '강남구') as gangnam_total_clinic_domestic
			,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN = '타지역') as ta_total_clinic_domestic
			,(
                   SELECT COUNT(1) 
                   FROM CORONA_CLINIC_STATUS A
                   ,(SELECT DISTINCT PATIENT_NAME,BIRTH,CELL_NUM FROM CORONA_CONFIRM_STATUS WHERE DEL_YN = '0') B
                   WHERE A.DEL_YN = '0'
                   AND A.NAME = B.PATIENT_NAME
                   AND A.BIRTH = B.BIRTH
                   AND A.CELL_NUM = B.CELL_NUM
       		) as confirm_accum_y
        FROM DUAL
		]]>
</select>

<select id="selectClinicDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CLINIC_VISIT_DATE
					,CELL_NUM
					,NAME
					,SEX
					,BIRTH
					,JOB
					,INSPECTION_CASE
					,SARAE_GUBUN
					,SUSPICION_GUBUN
					,SUSPICION_DAE
					,SUSPICION_SO
					,INS_ID
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
            FROM CORONA_CLINIC_STATUS 
            WHERE DEL_YN = 0              
		]]>
		<if test="CLINIC_DEPART == 'TODAY'">
		AND CLINIC_VISIT_DATE = #{WRITE_DATE}
		</if>
		
		<if test="CLINIC_SUSPICION_GUBUN != ''">
		AND SUSPICION_GUBUN = #{CLINIC_SUSPICION_GUBUN}
		</if>
		
		<if test="CLINIC_SUSPICION_DAE != ''">
		AND SUSPICION_DAE = #{CLINIC_SUSPICION_DAE}
		</if>
		
		<if test="CLINIC_SUSPICION_DAE == ''">
		AND SUSPICION_DAE IS NULL
		</if>
		
		<if test="CLINIC_SUSPICION_SO != ''">
		AND SUSPICION_SO = #{CLINIC_SUSPICION_SO}
		</if>
		
		<if test="CLINIC_SUSPICION_SO == '' and CLINIC_SUSPICION_GUBUN != '강남구' and CLINIC_SUSPICION_GUBUN != '해외'">
		AND SUSPICION_SO IS NULL
		</if>
		
   		<if test="ISO == 'ISO_EX'">
			AND INSPECTION_CASE != '자가격리해제자'
		</if>
		
   		<if test="ISO == 'ISO'">
			AND INSPECTION_CASE = '자가격리해제자'
		</if>
		
		ORDER BY WRITE_DATE,INS_DATE DESC		
</select>

<select id="selectClinicConfirmDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT * FROM (
		
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CLINIC_VISIT_DATE
					,CELL_NUM
					,NAME
					,SEX
					,BIRTH
					,JOB
					,INSPECTION_CASE
					,SARAE_GUBUN
					,SUSPICION_GUBUN
					,SUSPICION_DAE
					,SUSPICION_SO
					,INS_ID
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
  					,NVL((SELECT 1 FROM CORONA_CONFIRM_STATUS CCONFIRMS 
                            WHERE CCONFIRMS.DEL_YN = 0
                            AND CCONFIRMS.PATIENT_NAME = CCLINICS.NAME
                            AND CCONFIRMS.BIRTH = CCLINICS.BIRTH
                            AND CCONFIRMS.CELL_NUM = CCLINICS.CELL_NUM
                            AND ROWNUM = 1
                        ),0) as CONFIRM_CHECK
            FROM CORONA_CLINIC_STATUS CCLINICS
            WHERE DEL_YN = 0              
		]]>
		<if test="CLINIC_CONFIRM_DEPART == 'TODAY'">
		AND WRITE_DATE = #{WRITE_DATE}
		</if>
		
		<if test="CLINIC_CONFIRM_SUSPICION_GUBUN != ''">
		AND SUSPICION_GUBUN = #{CLINIC_CONFIRM_SUSPICION_GUBUN}
		</if>
		
		<if test="CLINIC_CONFIRM_SUSPICION_DAE != ''">
		AND SUSPICION_DAE = #{CLINIC_CONFIRM_SUSPICION_DAE}
		</if>
		
		<if test="CLINIC_CONFIRM_SUSPICION_SO != ''">
		AND SUSPICION_SO = #{CLINIC_CONFIRM_SUSPICION_SO}
		</if>
		
   		<if test="CONFIRM_ISO == 'ISO_EX'">
			AND INSPECTION_CASE != '자가격리해제자'
		</if>
		
   		<if test="CONFIRM_ISO == 'ISO'">
			AND INSPECTION_CASE = '자가격리해제자'
		</if>
		)A 
		WHERE A.CONFIRM_CHECK = 1
		
		ORDER BY WRITE_DATE,INS_DATE DESC		
</select>



<!-- 선별진료소 케이스현황 -->
<select id="selectClinicCaseStatus" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
        SELECT
            #{showdate} as showdate
            ,#{seldate} as seldate
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND SUSPICION_GUBUN='해외' AND INSPECTION_CASE = '자가격리해제자' ) as oversea_iso_clinc
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE in('학생','교직원') ) as stu_tec_clinc
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND CLINIC_VISIT_DATE=#{seldate} AND INSPECTION_CASE = '운수업종사자' ) as driver_clinc
            
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND SUSPICION_GUBUN='해외' AND INSPECTION_CASE = '자가격리해제자' ) as tot_oversea_iso_clinc
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND INSPECTION_CASE in('학생','교직원') ) as tot_stu_tec_clinc
            ,(SELECT COUNT(1) FROM CORONA_CLINIC_STATUS WHERE DEL_YN='0' AND INSPECTION_CASE = '운수업종사자' ) as tot_driver_clinc

        FROM DUAL
		]]>
</select>

<select id="selectClinicCaseDtlList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
             SELECT COUNT(*) OVER() AS TOTAL_COUNT                                
                    ,ID
					,WRITE_DATE
					,CLINIC_VISIT_DATE
					,CELL_NUM
					,NAME
					,SEX
					,BIRTH
					,JOB
					,INSPECTION_CASE
					,SARAE_GUBUN
					,SUSPICION_GUBUN
					,SUSPICION_DAE
					,SUSPICION_SO
					,INS_ID
                    ,TO_CHAR(INS_DATE, 'YYYY.MM.DD HH24:MI:SS') INS_DATE
            FROM CORONA_CLINIC_STATUS 
            WHERE DEL_YN = 0              
		]]>
		<if test="CLINIC_CASE_CONDITION != null and CLINIC_CASE_CONDITION == '해제'">
			AND INSPECTION_CASE = '자가격리해제자'
		</if>
		<if test="CLINIC_CASE_CONDITION != null and CLINIC_CASE_CONDITION == '학생교직원'">
			AND INSPECTION_CASE in('학생','교직원')
		</if>
		<if test="CLINIC_CASE_CONDITION != null and CLINIC_CASE_CONDITION == '운수업'">
			AND INSPECTION_CASE = '운수업종사자'
		</if>
		
		AND CLINIC_VISIT_DATE = #{CLINIC_CASE_SELDATE}
		ORDER BY CLINIC_VISIT_DATE,INS_DATE DESC		
</select>


	<update id="updateClinicDae" parameterType="hashmap">
	<![CDATA[		
		UPDATE CORONA_CLINIC_STATUS
		SET SUSPICION_DAE = #{AF_DAE}
		WHERE DEL_YN='0'
		AND SUSPICION_GUBUN = #{SUSPICION_GUBUN}
		AND SUSPICION_DAE = #{BF_DAE}
		
	]]>
	</update>
	
	<update id="updateClinicSo" parameterType="hashmap">
	<![CDATA[		
		UPDATE CORONA_CLINIC_STATUS
		SET SUSPICION_SO = #{AF_SO}
		WHERE DEL_YN='0'
		AND SUSPICION_GUBUN = #{SUSPICION_GUBUN}
		AND SUSPICION_SO = #{BF_SO}
	]]>
	</update>

</mapper>